<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body> 
    
    <header>
        {{!-- <button ></button> --}}
        <h1 id="one">WELCOME   &nbsp;  TO  &nbsp;  THAPAREX - <br> College Exchange Portal</h1>
        <h2 id="one">Buy and Sell Items Within Your College Community</h2>
        {{!-- <img  src="thaparexlogo.jpg"alt=""> --}}
        <img id="pic" src="images/thaparexlogo.jpg" accept="image/jpeg" alt="">
    </header>
    <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Search...">
        <button onclick="search()">Search</button>
         <button class  ="logout-button" id="logout-btn"><a href="/logout">logout</a></button>
    </div>
   
    <nav>
        <a href="#">Electronics</a>
        <a href="#">Sports Fitness Equipment</a>
        <a href="#>Study Materials</a>
        <a href="#">Vehicles</a>
        <a href="#">Miscellaneous</a>
    </nav> 
    
<div class="add-product-form">
    <input type="text" id="productPrice" placeholder="Product Price">
    <input type="text" id="productDescription" placeholder="Product Description">
    <input type="file" id="productImage" accept="image/png,image/jpeg">
    {{!-- <input accept="image/png, image/jpeg" type="file" multiple="" autocomplete="off" id="productImage" style="display: none;"> --}}
    {{!-- <button id="add-image">Add image</button> --}}
    <button id="addProductButton">Add Products</button>

    {{!-- <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20" >
                    <path  style="height: 100px;width: 100px;" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 15a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm0 0h8m-8 0-1-4m9 4a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-9-4h10l2-7H3m2 7L3 4m0 0-.792-3H1"/>
                </svg> --}}
    <i class="fa-solid fa-cart-shopping"></i>

</div>

  

<div class="container">
        <header>
            <div class="title">PRODUCT LIST</div>
            <div class="icon-cart">
                <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 15a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm0 0h8m-8 0-1-4m9 4a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-9-4h10l2-7H3m2 7L3 4m0 0-.792-3H1"/>
                </svg>
                <span>0</span>
            </div>
        </header>

        
        <div class="listProduct">

        </div>
    </div>
    <div class="cartTab">
        <h1>Shopping Cart</h1>
        <div class="listCart">
            
        </div>
        <div class="btn">
            <button class="close">CLOSE</button>
            <button class="checkOut">Check Out</button>
        </div>
    </div>


<footer>
    <div class="footer-container">
        <div class="owner-info">
            <h3>Owner: <br> Yash Kumar</h3>
            <p>Contact: 8369843496</p>
            <p>Email: yashkumarhoppkins@gmail.com</p>
        </div>
        <div class="social-media">
            <h3><u>Follow us on:</u> </h3>
            <a href="https://www.instagram.com/y.a.s.h__k.u.m.a.r__/" target="_blank" title="Instagram">
          
                <img src="images/instaa.png" alt="Instagram">
            </a>
            <a href="https://www.youtube.com/channel/UCb3CFGx8isxzyp4iVY1ZL2Q" target="_blank" title="YouTube">
                <img src="images/youtubee.jpg" alt="YouTube">
            </a>
        </div>
    </div>
</footer>
</section>

<script>

console.log("Welcome");

const addProductBtn2 = document.getElementById('addProductButton')
function addProduct() {
    console.log('fn called')
    const productPrice = document.getElementById('productPrice').value;
    console.log('fn2 called')
    const productDescription = document.getElementById('productDescription').value;
    console.log('fn3 called')
    const productImageInput = document.getElementById('productImage');
    console.log('fn4 called')
    const productImage = productImageInput.files[0]; // Get the selected image file
    // Update the UI with the added product in the "Miscellaneous" section
    updateMiscellaneous(productPrice, productDescription, productImage);

    // Optional: You can clear the input fields after adding the product
    document.getElementById('productPrice').value = "";
    document.getElementById('productDescription').value = "";
    productImageInput.value = ""; // Clear the file input
}
addProductBtn2.addEventListener("click", () => {
    console.log("another fn callled")
    addProduct();
})

function updateMiscellaneous(name, description, image) {
    // Create a new product container
    const productContainer = document.createElement('div');
    productContainer.classList.add('product');

    // Create elements for name and description
    const descriptionElement = document.createElement('p');
    descriptionElement.textContent = `Description: ${description}`;
    productContainer.appendChild(descriptionElement);

    const nameElement = document.createElement('p');
    nameElement.textContent = `Price: ${name}`;
    productContainer.appendChild(nameElement);

    

    // Create an image element
    if (image) {
        const imageElement = document.createElement('img');
        imageElement.src = URL.createObjectURL(image);
        imageElement.alt = 'Product Image';
        // Set dimensions for the image
        imageElement.style.maxWidth = '300px';
        imageElement.style.maxHeight = '300px';
        productContainer.appendChild(imageElement);
    }

    // Append the new product container to the "Miscellaneous" section
    document.getElementById('miscellaneous').appendChild(productContainer);



    let listProductHTML = document.querySelector('.listProduct');
let listCartHTML = document.querySelector('.listCart');
let iconCart = document.querySelector('.icon-cart');
let iconCartSpan = document.querySelector('.icon-cart span');
let body = document.querySelector('body');
let closeCart = document.querySelector('.close');
let products = [];
let cart = [];


iconCart.addEventListener('click', () => {
    body.classList.toggle('showCart');
})
closeCart.addEventListener('click', () => {
    body.classList.toggle('showCart');
})

    const addDataToHTML = () => {
    // remove datas default from HTML

        // add new datas
        if(products.length > 0) // if has data
        {
            products.forEach(product => {
                let newProduct = document.createElement('div');
                newProduct.dataset.id = product.id;
                newProduct.classList.add('item');
                newProduct.innerHTML = 
                `<img src="${product.image}" alt="">
                <h2>${product.name}</h2>
                <div class="price">$${product.price}</div>
                <button class="addCart">Add To Cart</button>`;
                listProductHTML.appendChild(newProduct);
            });
        }
    }
    listProductHTML.addEventListener('click', (event) => {
        let positionClick = event.target;
        if(positionClick.classList.contains('addCart')){
            let id_product = positionClick.parentElement.dataset.id;
            addToCart(id_product);
        }
    })
const addToCart = (product_id) => {
    let positionThisProductInCart = cart.findIndex((value) => value.product_id == product_id);
    if(cart.length <= 0){
        cart = [{
            product_id: product_id,
            quantity: 1
        }];
    }else if(positionThisProductInCart < 0){
        cart.push({
            product_id: product_id,
            quantity: 1
        });
    }else{
        cart[positionThisProductInCart].quantity = cart[positionThisProductInCart].quantity + 1;
    }
    addCartToHTML();
    addCartToMemory();
}
const addCartToMemory = () => {
    localStorage.setItem('cart', JSON.stringify(cart));
}
const addCartToHTML = () => {
    listCartHTML.innerHTML = '';
    let totalQuantity = 0;
    if(cart.length > 0){
        cart.forEach(item => {
            totalQuantity = totalQuantity +  item.quantity;
            let newItem = document.createElement('div');
            newItem.classList.add('item');
            newItem.dataset.id = item.product_id;

            let positionProduct = products.findIndex((value) => value.id == item.product_id);
            let info = products[positionProduct];
            listCartHTML.appendChild(newItem);
            newItem.innerHTML = `
            <div class="image">
                    <img src="${info.image}">
                </div>
                <div class="name">
                ${info.name}
                </div>
                <div class="totalPrice">$${info.price * item.quantity}</div>
                <div class="quantity">
                    <span class="minus"><</span>
                    <span>${item.quantity}</span>
                    <span class="plus">></span>
                </div>
            `;
        })
    }
    iconCartSpan.innerText = totalQuantity;
}

listCartHTML.addEventListener('click', (event) => {
    let positionClick = event.target;
    if(positionClick.classList.contains('minus') || positionClick.classList.contains('plus')){
        let product_id = positionClick.parentElement.parentElement.dataset.id;
        let type = 'minus';
        if(positionClick.classList.contains('plus')){
            type = 'plus';
        }
        changeQuantityCart(product_id, type);
    }
})
const changeQuantityCart = (product_id, type) => {
    let positionItemInCart = cart.findIndex((value) => value.product_id == product_id);
    if(positionItemInCart >= 0){
        let info = cart[positionItemInCart];
        switch (type) {
            case 'plus':
                cart[positionItemInCart].quantity = cart[positionItemInCart].quantity + 1;
                break;
        
            default:
                let changeQuantity = cart[positionItemInCart].quantity - 1;
                if (changeQuantity > 0) {
                    cart[positionItemInCart].quantity = changeQuantity;
                }else{
                    cart.splice(positionItemInCart, 1);
                }
                break;
        }
    }
    addCartToHTML();
    addCartToMemory();
}

const initApp = () => {
    // get data product
    fetch('products.json')
    .then(response => response.json())
    .then(data => {
        products = data;
        addDataToHTML();

        // get data cart from memory
        if(localStorage.getItem('cart')){
            cart = JSON.parse(localStorage.getItem('cart'));
            addCartToHTML();
        }
    })
}
initApp();
}</script>

    {{!-- <script src="script.js"></script> --}}

</body>
</html>